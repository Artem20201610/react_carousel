{"version":3,"sources":["components/Carousel.js","App.js","index.js"],"names":["Carousel","state","scrollLeft","carouselWidth","showedLast","showedFirst","next","props","itemWidth","frameSize","infinite","step","maxScrollBy","scrollBy","setState","prev","this","images","animationDuration","carouselStyle","width","height","overflow","carouselListStyle","transform","transitionDuration","imageStyle","className","style","map","image","key","src","alt","type","onClick","React","Component","defaultProps","App","changeSetting","target","setting","value","newSetting","checked","length","defaultValue","min","max","onInput","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1e10ad1b.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Carousel.scss';\n\nclass Carousel extends React.Component {\n  state = {\n    scrollLeft: 0,\n    carouselWidth: 1300,\n  }\n\n  showedLast = false;\n\n  showedFirst = false;\n\n  next = () => {\n    const { itemWidth, frameSize, infinite, step } = this.props;\n    const { scrollLeft, carouselWidth } = this.state;\n    const maxScrollBy = carouselWidth - (itemWidth * frameSize);\n    let scrollBy = scrollLeft + (itemWidth * step);\n\n    if (scrollBy > maxScrollBy) {\n      scrollBy = maxScrollBy;\n\n      if (infinite) {\n        if (this.showedLast || (scrollLeft === maxScrollBy)) {\n          scrollBy = 0;\n          this.showedLast = false;\n        } else {\n          this.showedLast = true;\n        }\n      }\n    }\n\n    this.setState({\n      scrollLeft: scrollBy,\n    });\n  }\n\n  prev = () => {\n    const { itemWidth, infinite, step, frameSize } = this.props;\n    const { scrollLeft, carouselWidth } = this.state;\n    let scrollBy = scrollLeft - (itemWidth * step);\n\n    if (scrollBy < 0) {\n      scrollBy = 0;\n\n      if (infinite) {\n        if (this.showedFirst || (scrollLeft === 0)) {\n          scrollBy = carouselWidth - -(scrollLeft - (itemWidth * frameSize));\n          this.showedFirst = false;\n        } else {\n          this.showedFirst = true;\n        }\n      }\n    }\n\n    this.setState({\n      scrollLeft: scrollBy,\n    });\n  }\n\n  render() {\n    const { itemWidth, frameSize, images, animationDuration } = this.props;\n    const { scrollLeft } = this.state;\n    const carouselStyle = {\n      width: `${itemWidth * frameSize}px`,\n      height: `${itemWidth}px`,\n      overflow: `hidden`,\n    };\n    const carouselListStyle = {\n      transform: `translateX(-${scrollLeft}px)`,\n      transitionDuration: `${animationDuration}ms`,\n    };\n    const imageStyle = {\n      height: `${itemWidth}px`,\n      width: `${itemWidth}px`,\n    };\n\n    return (\n      <>\n        <div\n          className=\"Carousel\"\n        >\n          <ul\n            className=\"Carousel__list\"\n            style={carouselStyle}\n          >\n            <div\n              className=\"Carousel__list-scroll\"\n              style={carouselListStyle}\n            >\n              {images.map(image => (\n                <li key={image}>\n                  <img\n                    src={image}\n                    alt={image}\n                    style={imageStyle}\n                  />\n                </li>\n              ))}\n            </div>\n          </ul>\n        </div>\n        <button\n          type=\"button\"\n          onClick={this.prev}\n        >\n          Prev\n        </button>\n        <button\n          type=\"button\"\n          onClick={this.next}\n        >\n          Next\n        </button>\n      </>\n    );\n  }\n}\n\nCarousel.propTypes = {\n  step: PropTypes.number,\n  itemWidth: PropTypes.number,\n  frameSize: PropTypes.number,\n  animationDuration: PropTypes.number,\n  infinite: PropTypes.bool,\n  images: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nCarousel.defaultProps = {\n  step: 3,\n  itemWidth: 130,\n  frameSize: 3,\n  animationDuration: 1000,\n  infinite: false,\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\n\nimport Carousel from './components/Carousel';\n\nclass App extends React.Component {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  changeSetting = (target, setting) => {\n    let value = +target.value;\n    const newSetting = {};\n\n    if (setting === 'infinite') {\n      value = target.checked;\n    }\n\n    newSetting[setting] = value;\n\n    this.setState(newSetting);\n  }\n\n  render() {\n    const { images }\n    = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1>Carousel with {images.length} images</h1>\n\n        <Carousel\n          images={images}\n          infinite={this.state.infinite}\n          animationDuration={this.state.animationDuration}\n          step={this.state.step}\n          itemWidth={this.state.itemWidth}\n          frameSize={this.state.frameSize}\n        />\n        <form className=\"form\">\n          <label className=\"form__inputs\">\n            step:\n            <input\n              type=\"number\"\n              defaultValue=\"3\"\n              min=\"1\"\n              max=\"5\"\n              onInput={({ target }) => {\n                this.changeSetting(target, 'step');\n              }}\n            />\n          </label>\n          <label className=\"form__inputs\">\n            frameSize:\n            <input\n              type=\"number\"\n              defaultValue=\"3\"\n              min=\"1\"\n              max=\"5\"\n              onInput={({ target }) => {\n                this.changeSetting(target, 'frameSize');\n              }}\n            />\n          </label>\n          <label className=\"form__inputs\">\n            itemWidth:\n            <input\n              type=\"number\"\n              defaultValue=\"130\"\n              min=\"100\"\n              max=\"150\"\n              onInput={({ target }) => {\n                this.changeSetting(target, 'itemWidth');\n              }}\n            />\n          </label>\n          <label className=\"form__inputs\">\n            animationDuration:\n            <input\n              type=\"number\"\n              defaultValue=\"1000\"\n              min=\"500\"\n              max=\"2000\"\n              onInput={({ target }) => {\n                this.changeSetting(target, 'animationDuration');\n              }}\n            />\n          </label>\n          <label className=\"form__inputs\">\n            infinite:\n            <input\n              type=\"checkbox\"\n              onInput={({ target }) => {\n                this.changeSetting(target, 'infinite');\n              }}\n            />\n          </label>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}