{"version":3,"sources":["components/CarouselControls/CarouselControls.js","types.js","components/CarouselImage/CarouselImage.js","components/CarouselList/CarouselList.js","components/Carousel/Carousel.js","components/Controls/Controls.js","App.js","index.js"],"names":["CarouselControls","PropTypes","shape","height","string","isRequired","width","func","action","text","type","onClick","CarouselImage","image","imageStyle","src","alt","style","CarouselList","props","className","carouselStyle","carouselListStyle","images","map","key","Carousel","state","scrollLeft","imagesCount","itemWidth","showedLast","showedFirst","imageWidth","moveToNextFrame","infinite","step","frameSize","maxScrollBy","scrollBy","setState","moveToPrevFrame","carouselWidth","this","animationDuration","overflow","transform","transitionDuration","React","Component","defaultProps","Controls","changeSetting","defaultValue","min","max","onInput","target","previousSibling","textContent","value","App","setting","newSetting","checked","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.55e9ec5d.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FuncType } from '../../types';\n\nexport const CarouselControls = ({ action, text }) => (\n  <button\n    type=\"button\"\n    onClick={action}\n  >\n    {text}\n  </button>\n);\n\nCarouselControls.propTypes = {\n  action: FuncType.isRequired,\n  text: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nexport const ImageStyleType = PropTypes.shape({\n  height: PropTypes.string.isRequired,\n  width: PropTypes.string.isRequired,\n});\n\nexport const ImageType = PropTypes.string;\n\nexport const FuncType = PropTypes.func;\n","import React from 'react';\nimport { ImageType, ImageStyleType } from '../../types';\n\nexport const CarouselImage = ({ image, imageStyle }) => (\n  <img\n    src={image}\n    alt={image}\n    style={imageStyle}\n  />\n);\n\nCarouselImage.propTypes = {\n  image: ImageType.isRequired,\n  imageStyle: ImageStyleType.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CarouselImage } from '../CarouselImage/CarouselImage';\nimport { ImageStyleType, ImageType } from '../../types';\n\nexport const CarouselList = props => (\n  <ul\n    className=\"Carousel__list\"\n    style={props.carouselStyle}\n  >\n    <div\n      className=\"Carousel__list-scroll\"\n      style={props.carouselListStyle}\n    >\n      {props.images.map(image => (\n        <li key={image}>\n          <CarouselImage image={image} imageStyle={props.imageStyle} />\n        </li>\n      ))}\n    </div>\n  </ul>\n);\n\nCarouselList.propTypes = {\n  imageStyle: ImageStyleType.isRequired,\n  images: PropTypes.arrayOf(ImageType.isRequired).isRequired,\n  carouselStyle: PropTypes.shape({\n    height: PropTypes.string.isRequired,\n    width: PropTypes.string.isRequired,\n    overflow: PropTypes.string.isRequired,\n  }).isRequired,\n  carouselListStyle: PropTypes.shape({\n    transform: PropTypes.string.isRequired,\n    transitionDuration: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Carousel.scss';\n\nimport { CarouselControls } from '../CarouselControls/CarouselControls';\nimport { CarouselList } from '../CarouselList/CarouselList';\n\nclass Carousel extends React.Component {\n  state = {\n    scrollLeft: 0,\n    imagesCount: 10,\n    itemWidth: 130,\n  }\n\n  showedLast = false;\n\n  showedFirst = false;\n\n  imageWidth = 130;\n\n  moveToNextFrame = () => {\n    const { itemWidth, infinite, step, frameSize } = this.props;\n    const { scrollLeft } = this.state;\n    const carouselWidth = itemWidth * this.state.imagesCount;\n    const maxScrollBy = carouselWidth - (itemWidth * frameSize);\n    let scrollBy = scrollLeft + (itemWidth * step);\n\n    if (scrollBy > maxScrollBy) {\n      scrollBy = maxScrollBy;\n\n      if (infinite) {\n        if (this.showedLast || (scrollLeft === maxScrollBy)) {\n          scrollBy = 0;\n          this.showedLast = false;\n        } else {\n          this.showedLast = true;\n        }\n      }\n    }\n\n    this.setState({\n      scrollLeft: scrollBy,\n    });\n  }\n\n  moveToPrevFrame = () => {\n    const { itemWidth, infinite, step, frameSize } = this.props;\n    const { scrollLeft } = this.state;\n    const carouselWidth = itemWidth * this.state.imagesCount;\n    let scrollBy = scrollLeft - (itemWidth * step);\n\n    if (scrollBy < 0) {\n      scrollBy = 0;\n\n      if (infinite) {\n        if (this.showedFirst || (scrollLeft === 0)) {\n          scrollBy = carouselWidth - -(scrollLeft - (itemWidth * frameSize));\n          this.showedFirst = false;\n        } else {\n          this.showedFirst = true;\n        }\n      }\n    }\n\n    this.setState({\n      scrollLeft: scrollBy,\n    });\n  }\n\n  render() {\n    const { itemWidth, images, animationDuration, frameSize } = this.props;\n    const { scrollLeft } = this.state;\n\n    if (itemWidth !== this.state.itemWidth) {\n      this.setState({\n        scrollLeft: 0,\n        itemWidth,\n      });\n    }\n\n    const carouselStyle = {\n      width: `${itemWidth * frameSize}px`,\n      height: `${itemWidth}px`,\n      overflow: `hidden`,\n    };\n    const carouselListStyle = {\n      transform: `translateX(-${scrollLeft}px)`,\n      transitionDuration: `${animationDuration}ms`,\n    };\n    const imageStyle = {\n      height: `${itemWidth}px`,\n      width: `${itemWidth}px`,\n    };\n\n    return (\n      <>\n        <div\n          className=\"Carousel\"\n        >\n          <CarouselList\n            carouselStyle={carouselStyle}\n            carouselListStyle={carouselListStyle}\n            images={images}\n            imageStyle={imageStyle}\n          />\n        </div>\n        <CarouselControls\n          action={this.moveToPrevFrame}\n          text=\"prev\"\n        />\n        <CarouselControls\n          action={this.moveToNextFrame}\n          text=\"next\"\n        />\n      </>\n    );\n  }\n}\n\nCarousel.propTypes = {\n  step: PropTypes.number,\n  itemWidth: PropTypes.number,\n  frameSize: PropTypes.number,\n  animationDuration: PropTypes.number,\n  infinite: PropTypes.bool,\n  images: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nCarousel.defaultProps = {\n  step: 3,\n  itemWidth: 130,\n  frameSize: 3,\n  animationDuration: 1000,\n  infinite: false,\n};\n\nexport default Carousel;\n","import React from 'react';\nimport { FuncType } from '../../types';\n\nexport const Controls = ({ changeSetting }) => (\n  <form className=\"form\">\n    <label className=\"form__inputs\">\n      step:\n      <label>{` 3`}</label>\n      <input\n        type=\"range\"\n        defaultValue=\"3\"\n        min=\"1\"\n        max=\"5\"\n        onInput={({ target }) => {\n          const output = target.previousSibling;\n\n          output.textContent = ` ${target.value}`;\n\n          changeSetting(target, 'step');\n        }}\n      />\n    </label>\n    <label className=\"form__inputs\">\n      frameSize:\n      <label>{` 3`}</label>\n      <input\n        type=\"range\"\n        defaultValue=\"3\"\n        min=\"1\"\n        max=\"5\"\n        onInput={({ target }) => {\n          const output = target.previousSibling;\n\n          output.textContent = ` ${target.value}`;\n\n          changeSetting(target, 'frameSize');\n        }}\n      />\n    </label>\n    <label className=\"form__inputs\">\n      itemWidth:\n      <label>{` 130`}</label>\n      <input\n        type=\"range\"\n        defaultValue=\"130\"\n        min=\"100\"\n        max=\"259\"\n        onInput={({ target }) => {\n          const output = target.previousSibling;\n\n          output.textContent = ` ${target.value}`;\n\n          changeSetting(target, 'itemWidth');\n        }}\n      />\n    </label>\n    <label className=\"form__inputs\">\n      animationDuration:\n      <label>{` 1000`}</label>\n      <input\n        type=\"range\"\n        defaultValue=\"1000\"\n        min=\"1000\"\n        max=\"3000\"\n        onInput={({ target }) => {\n          const output = target.previousSibling;\n\n          output.textContent = ` ${target.value}`;\n\n          changeSetting(target, 'animationDuration');\n        }}\n      />\n    </label>\n    <label className=\"form__inputs\">\n      infinite:\n      <input\n        type=\"checkbox\"\n        onInput={({ target }) => {\n          changeSetting(target, 'infinite');\n        }}\n      />\n    </label>\n  </form>\n);\n\nControls.propTypes = {\n  changeSetting: FuncType.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel/Carousel';\nimport { Controls } from './components/Controls/Controls';\n\nclass App extends React.Component {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  changeSetting = (target, setting) => {\n    let value = +target.value;\n    const newSetting = {};\n\n    if (setting === 'infinite') {\n      value = target.checked;\n    }\n\n    newSetting[setting] = value;\n\n    this.setState(newSetting);\n  }\n\n  render() {\n    const { images }\n    = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1>Carousel with {images.length} images</h1>\n\n        <Carousel\n          images={images}\n          infinite={this.state.infinite}\n          animationDuration={this.state.animationDuration}\n          step={this.state.step}\n          itemWidth={this.state.itemWidth}\n          frameSize={this.state.frameSize}\n        />\n        <Controls changeSetting={this.changeSetting} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}