{"version":3,"sources":["components/CarouselControls/CarouselControls.js","components/CarouselImage/CarouselImage.js","types.js","components/CarouselList/CarouselList.js","components/Carousel/Carousel.js","components/Controls/Controls.js","App.js","index.js"],"names":["CarouselControls","props","type","onClick","app","text","CarouselImage","PropTypes","shape","height","string","isRequired","width","src","image","alt","style","imageStyle","CarouselList","className","carouselStyle","carouselListStyle","images","map","key","Carousel","state","scrollLeft","imagesCount","showedLast","showedFirst","next","itemWidth","infinite","step","frameSize","maxScrollBy","scrollBy","setState","prev","carouselWidth","checkFrameSize","imagePerFrame","this","animationDuration","overflow","transform","transitionDuration","React","Component","defaultProps","Controls","defaultValue","min","max","onInput","target","previousSibling","textContent","value","changeSetting","App","setting","newSetting","checked","length","ReactDOM","render","document","getElementById"],"mappings":"kOAGaA,G,YAAmB,SAAAC,GAAK,OACnC,4BACEC,KAAK,SACLC,QAASF,EAAMG,IAAIH,EAAMI,OAExBJ,EAAMI,Q,gBCLEC,GCDiBC,IAAUC,MAAM,CAC5CC,OAAQF,IAAUG,OAAOC,WACzBC,MAAOL,IAAUG,OAAOC,aAGDJ,IAAUG,ODJN,SAAAT,GAAK,OAChC,yBACEY,IAAKZ,EAAMa,MACXC,IAAKd,EAAMa,MACXE,MAAOf,EAAMgB,eEFJC,EAAe,SAAAjB,GAAK,OAC/B,wBACEkB,UAAU,iBACVH,MAAOf,EAAMmB,eAEb,yBACED,UAAU,wBACVH,MAAOf,EAAMoB,mBAEZpB,EAAMqB,OAAOC,KAAI,SAAAT,GAAK,OACrB,wBAAIU,IAAKV,GACP,kBAAC,EAAD,CAAeA,MAAOA,EAAOG,WAAYhB,EAAMgB,oBCRnDQ,E,4MACJC,MAAQ,CACNC,WAAY,EACZC,YAAa,I,EAGfC,YAAa,E,EAEbC,aAAc,E,EAEdC,KAAO,WACL,MAAiD,EAAK9B,MAA9C+B,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,SAAUC,EAA7B,EAA6BA,KAAMC,EAAnC,EAAmCA,UAC3BR,EAAe,EAAKD,MAApBC,WAEFS,EADgBJ,EAAY,EAAKN,MAAME,YACRI,EAAYG,EAC7CE,EAAWV,EAAcK,EAAYE,EAErCG,EAAWD,IACbC,EAAWD,EAEPH,IACE,EAAKJ,YAAeF,IAAeS,GACrCC,EAAW,EACX,EAAKR,YAAa,GAElB,EAAKA,YAAa,IAKxB,EAAKS,SAAS,CACZX,WAAYU,K,EAIhBE,KAAO,WACL,MAAiD,EAAKtC,MAA9C+B,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,SAAUC,EAA7B,EAA6BA,KAAMC,EAAnC,EAAmCA,UAC3BR,EAAe,EAAKD,MAApBC,WACFa,EAAgBR,EAAY,EAAKN,MAAME,YACzCS,EAAWV,EAAcK,EAAYE,EAErCG,EAAW,IACbA,EAAW,EAEPJ,IACE,EAAKH,aAA+B,IAAfH,GACvBU,EAAWG,KAAkBb,EAAcK,EAAYG,GACvD,EAAKL,aAAc,GAEnB,EAAKA,aAAc,IAKzB,EAAKQ,SAAS,CACZX,WAAYU,K,EAIhBI,eAAiB,SAACN,EAAWH,GAC3B,IAAIU,EAAgBP,EAYpB,OAVIH,GAAa,KAAOA,GAAa,IACnCU,EAAgB,EACPV,GAAa,IACtBU,EAAgB,EACPV,GAAa,MACtBU,EAAgBA,EAAgB,EAC5B,EACAA,GAGCA,G,4CAGT,WACE,MAAiDC,KAAK1C,MAA9C+B,EAAR,EAAQA,UAAWV,EAAnB,EAAmBA,OAAQsB,EAA3B,EAA2BA,kBACrBT,EAAcQ,KAAK1C,MAAnBkC,UACER,EAAegB,KAAKjB,MAApBC,WAERQ,EAAYQ,KAAKF,eAAeN,EAAWH,GAE3C,IAAMZ,EAAgB,CACpBR,MAAM,GAAD,OAAKoB,EAAYG,EAAjB,MACL1B,OAAO,GAAD,OAAKuB,EAAL,MACNa,SAAS,UAELxB,EAAoB,CACxByB,UAAU,eAAD,OAAiBnB,EAAjB,OACToB,mBAAmB,GAAD,OAAKH,EAAL,OAEd3B,EAAa,CACjBR,OAAO,GAAD,OAAKuB,EAAL,MACNpB,MAAM,GAAD,OAAKoB,EAAL,OAGP,OACE,oCACE,yBACEb,UAAU,YAEV,kBAAC,EAAD,CACEC,cAAeA,EACfC,kBAAmBA,EACnBC,OAAQA,EACRL,WAAYA,KAGhB,kBAAC,EAAD,CAAkBb,IAAKuC,KAAMtC,KAAK,SAClC,kBAAC,EAAD,CAAkBD,IAAKuC,KAAMtC,KAAK,c,GA7GnB2C,IAAMC,WA4H7BxB,EAASyB,aAAe,CACtBhB,KAAM,EACNF,UAAW,IACXG,UAAW,EACXS,kBAAmB,IACnBX,UAAU,GAGGR,QCzIF0B,EAAW,SAAAlD,GAAK,OAC3B,0BAAMkB,UAAU,QACd,2BAAOA,UAAU,gBAAjB,QAEE,qCACA,2BACEjB,KAAK,QACLkD,aAAa,IACbC,IAAI,IACJC,IAAI,IACJC,QAAS,YAAiB,IAAdC,EAAa,EAAbA,OACKA,EAAOC,gBAEfC,YAAP,WAAyBF,EAAOG,OAEhC1D,EAAMG,IAAIwD,cAAcJ,EAAQ,YAItC,2BAAOrC,UAAU,gBAAjB,aAEE,qCACA,2BACEjB,KAAK,QACLkD,aAAa,IACbC,IAAI,IACJC,IAAI,IACJC,QAAS,YAAiB,IAAdC,EAAa,EAAbA,OACKA,EAAOC,gBAEfC,YAAP,WAAyBF,EAAOG,OAEhC1D,EAAMG,IAAIwD,cAAcJ,EAAQ,iBAItC,2BAAOrC,UAAU,gBAAjB,aAEE,uCACA,2BACEjB,KAAK,QACLkD,aAAa,MACbC,IAAI,MACJC,IAAI,MACJC,QAAS,YAAiB,IAAdC,EAAa,EAAbA,OACKA,EAAOC,gBAEfC,YAAP,WAAyBF,EAAOG,OAEhC1D,EAAMG,IAAIwD,cAAcJ,EAAQ,iBAItC,2BAAOrC,UAAU,gBAAjB,qBAEE,2BACEjB,KAAK,SACLkD,aAAa,OACbG,QAAS,YAAiB,IAAdC,EAAa,EAAbA,OACVvD,EAAMG,IAAIwD,cAAcJ,EAAQ,yBAItC,2BAAOrC,UAAU,gBAAjB,YAEE,2BACEjB,KAAK,WACLqD,QAAS,YAAiB,IAAdC,EAAa,EAAbA,OACVvD,EAAMG,IAAIwD,cAAcJ,EAAQ,kBCT3BK,E,4MAxDbnC,MAAQ,CACNJ,OAAQ,CACN,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,gBAEFY,KAAM,EACNC,UAAW,EACXH,UAAW,IACXY,kBAAmB,IACnBX,UAAU,G,EAGZ2B,cAAgB,SAACJ,EAAQM,GACvB,IAAIH,GAASH,EAAOG,MACdI,EAAa,GAEH,aAAZD,IACFH,EAAQH,EAAOQ,SAGjBD,EAAWD,GAAWH,EAEtB,EAAKrB,SAASyB,I,4CAGhB,WACE,IAAQzC,EACNqB,KAAKjB,MADCJ,OAGR,OACE,yBAAKH,UAAU,OAEb,6CAAmBG,EAAO2C,OAA1B,WAEA,kBAAC,EAAD,CACE3C,OAAQA,EACRW,SAAUU,KAAKjB,MAAMO,SACrBW,kBAAmBD,KAAKjB,MAAMkB,kBAC9BV,KAAMS,KAAKjB,MAAMQ,KACjBF,UAAWW,KAAKjB,MAAMM,UACtBG,UAAWQ,KAAKjB,MAAMS,YAExB,kBAAC,EAAD,CAAU/B,IAAKuC,Y,GAnDLK,IAAMC,WCDxBiB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.072ceab1.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const CarouselControls = props => (\n  <button\n    type=\"button\"\n    onClick={props.app[props.text]}\n  >\n    {props.text}\n  </button>\n);\n\nCarouselControls.propTypes = {\n  app: PropTypes.shape({\n    prev: PropTypes.func.isRequired,\n    next: PropTypes.func.isRequired,\n  }).isRequired,\n  text: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport { imageType, imageStyleType } from '../../types';\n\nexport const CarouselImage = props => (\n  <img\n    src={props.image}\n    alt={props.image}\n    style={props.imageStyle}\n  />\n);\n\nCarouselImage.propTypes = {\n  image: imageType.isRequired,\n  imageStyle: imageStyleType.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nexport const imageStyleType = PropTypes.shape({\n  height: PropTypes.string.isRequired,\n  width: PropTypes.string.isRequired,\n});\n\nexport const imageType = PropTypes.string;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CarouselImage } from '../CarouselImage/CarouselImage';\nimport { imageStyleType, imageType } from '../../types';\n\nexport const CarouselList = props => (\n  <ul\n    className=\"Carousel__list\"\n    style={props.carouselStyle}\n  >\n    <div\n      className=\"Carousel__list-scroll\"\n      style={props.carouselListStyle}\n    >\n      {props.images.map(image => (\n        <li key={image}>\n          <CarouselImage image={image} imageStyle={props.imageStyle} />\n        </li>\n      ))}\n    </div>\n  </ul>\n);\n\nCarouselList.propTypes = {\n  imageStyle: imageStyleType.isRequired,\n  images: PropTypes.arrayOf(imageType).isRequired,\n  carouselStyle: PropTypes.shape({\n    height: PropTypes.string.isRequired,\n    width: PropTypes.string.isRequired,\n    overflow: PropTypes.string.isRequired,\n  }).isRequired,\n  carouselListStyle: PropTypes.shape({\n    transform: PropTypes.string.isRequired,\n    transitionDuration: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Carousel.scss';\n\nimport { CarouselControls } from '../CarouselControls/CarouselControls';\nimport { CarouselList } from '../CarouselList/CarouselList';\n\nclass Carousel extends React.Component {\n  state = {\n    scrollLeft: 0,\n    imagesCount: 10,\n  }\n\n  showedLast = false;\n\n  showedFirst = false;\n\n  next = () => {\n    const { itemWidth, infinite, step, frameSize } = this.props;\n    const { scrollLeft } = this.state;\n    const carouselWidth = itemWidth * this.state.imagesCount;\n    const maxScrollBy = carouselWidth - (itemWidth * frameSize);\n    let scrollBy = scrollLeft + (itemWidth * step);\n\n    if (scrollBy > maxScrollBy) {\n      scrollBy = maxScrollBy;\n\n      if (infinite) {\n        if (this.showedLast || (scrollLeft === maxScrollBy)) {\n          scrollBy = 0;\n          this.showedLast = false;\n        } else {\n          this.showedLast = true;\n        }\n      }\n    }\n\n    this.setState({\n      scrollLeft: scrollBy,\n    });\n  }\n\n  prev = () => {\n    const { itemWidth, infinite, step, frameSize } = this.props;\n    const { scrollLeft } = this.state;\n    const carouselWidth = itemWidth * this.state.imagesCount;\n    let scrollBy = scrollLeft - (itemWidth * step);\n\n    if (scrollBy < 0) {\n      scrollBy = 0;\n\n      if (infinite) {\n        if (this.showedFirst || (scrollLeft === 0)) {\n          scrollBy = carouselWidth - -(scrollLeft - (itemWidth * frameSize));\n          this.showedFirst = false;\n        } else {\n          this.showedFirst = true;\n        }\n      }\n    }\n\n    this.setState({\n      scrollLeft: scrollBy,\n    });\n  }\n\n  checkFrameSize = (frameSize, itemWidth) => {\n    let imagePerFrame = frameSize;\n\n    if (itemWidth >= 400 && itemWidth <= 599) {\n      imagePerFrame = 2;\n    } else if (itemWidth >= 600) {\n      imagePerFrame = 1;\n    } else if (itemWidth >= 260) {\n      imagePerFrame = imagePerFrame > 4\n        ? 4\n        : imagePerFrame;\n    }\n\n    return imagePerFrame;\n  }\n\n  render() {\n    const { itemWidth, images, animationDuration } = this.props;\n    let { frameSize } = this.props;\n    const { scrollLeft } = this.state;\n\n    frameSize = this.checkFrameSize(frameSize, itemWidth);\n\n    const carouselStyle = {\n      width: `${itemWidth * frameSize}px`,\n      height: `${itemWidth}px`,\n      overflow: `hidden`,\n    };\n    const carouselListStyle = {\n      transform: `translateX(-${scrollLeft}px)`,\n      transitionDuration: `${animationDuration}ms`,\n    };\n    const imageStyle = {\n      height: `${itemWidth}px`,\n      width: `${itemWidth}px`,\n    };\n\n    return (\n      <>\n        <div\n          className=\"Carousel\"\n        >\n          <CarouselList\n            carouselStyle={carouselStyle}\n            carouselListStyle={carouselListStyle}\n            images={images}\n            imageStyle={imageStyle}\n          />\n        </div>\n        <CarouselControls app={this} text=\"prev\" />\n        <CarouselControls app={this} text=\"next\" />\n      </>\n    );\n  }\n}\n\nCarousel.propTypes = {\n  step: PropTypes.number,\n  itemWidth: PropTypes.number,\n  frameSize: PropTypes.number,\n  animationDuration: PropTypes.number,\n  infinite: PropTypes.bool,\n  images: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nCarousel.defaultProps = {\n  step: 3,\n  itemWidth: 130,\n  frameSize: 3,\n  animationDuration: 1000,\n  infinite: false,\n};\n\nexport default Carousel;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Controls = props => (\n  <form className=\"form\">\n    <label className=\"form__inputs\">\n      step:\n      <label>{` 3`}</label>\n      <input\n        type=\"range\"\n        defaultValue=\"3\"\n        min=\"1\"\n        max=\"5\"\n        onInput={({ target }) => {\n          const output = target.previousSibling;\n\n          output.textContent = ` ${target.value}`;\n\n          props.app.changeSetting(target, 'step');\n        }}\n      />\n    </label>\n    <label className=\"form__inputs\">\n      frameSize:\n      <label>{` 3`}</label>\n      <input\n        type=\"range\"\n        defaultValue=\"3\"\n        min=\"1\"\n        max=\"5\"\n        onInput={({ target }) => {\n          const output = target.previousSibling;\n\n          output.textContent = ` ${target.value}`;\n\n          props.app.changeSetting(target, 'frameSize');\n        }}\n      />\n    </label>\n    <label className=\"form__inputs\">\n      itemWidth:\n      <label>{` 130`}</label>\n      <input\n        type=\"range\"\n        defaultValue=\"130\"\n        min=\"100\"\n        max=\"259\"\n        onInput={({ target }) => {\n          const output = target.previousSibling;\n\n          output.textContent = ` ${target.value}`;\n\n          props.app.changeSetting(target, 'itemWidth');\n        }}\n      />\n    </label>\n    <label className=\"form__inputs\">\n      animationDuration:\n      <input\n        type=\"number\"\n        defaultValue=\"1000\"\n        onInput={({ target }) => {\n          props.app.changeSetting(target, 'animationDuration');\n        }}\n      />\n    </label>\n    <label className=\"form__inputs\">\n      infinite:\n      <input\n        type=\"checkbox\"\n        onInput={({ target }) => {\n          props.app.changeSetting(target, 'infinite');\n        }}\n      />\n    </label>\n  </form>\n);\n\nControls.propTypes = {\n  app: PropTypes.shape({\n    changeSetting: PropTypes.func.isRequired,\n  }).isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel/Carousel';\nimport { Controls } from './components/Controls/Controls';\n\nclass App extends React.Component {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  changeSetting = (target, setting) => {\n    let value = +target.value;\n    const newSetting = {};\n\n    if (setting === 'infinite') {\n      value = target.checked;\n    }\n\n    newSetting[setting] = value;\n\n    this.setState(newSetting);\n  }\n\n  render() {\n    const { images }\n    = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1>Carousel with {images.length} images</h1>\n\n        <Carousel\n          images={images}\n          infinite={this.state.infinite}\n          animationDuration={this.state.animationDuration}\n          step={this.state.step}\n          itemWidth={this.state.itemWidth}\n          frameSize={this.state.frameSize}\n        />\n        <Controls app={this} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}